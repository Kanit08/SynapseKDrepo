{
	"name": "Arrays",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkkdspool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0c75fb24-a730-4f8b-ae96-17917e4b84c9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c853d123-c274-4d76-8290-e704c4a8dd26/resourceGroups/AzurePracticeRG/providers/Microsoft.Synapse/workspaces/azurekdsynapsespark/bigDataPools/sparkkdspool",
				"name": "sparkkdspool",
				"type": "Spark",
				"endpoint": "https://azurekdsynapsespark.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkkdspool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"\r\n",
					"data1=[(\"ron\",[1,2]),\r\n",
					"        (\"don\",[3,4]),\r\n",
					"        (\"son\",[5,6])]\r\n",
					"#schema1=[\"name\",\"number\"]\r\n",
					"schema1=StructType(\\\r\n",
					"                    [StructField(\"name\",StringType()),\\\r\n",
					"                    StructField(\"number\",ArrayType(IntegerType()))\\\r\n",
					"                    ])\r\n",
					"df=spark.createDataFrame(data=data1,schema=schema1)\r\n",
					"df.show()\r\n",
					"df.printSchema()\r\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df1=df.withColumn(\"new number\",col('number')[0])\r\n",
					"display(df1)"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"\r\n",
					"data1=[(1,\"ron\",[\"aws\",\"python\"]),\r\n",
					"        (2,\"don\",[\"azure\",\"java\"]),\r\n",
					"        (3,\"son\",[\"gcp\",\".net\"])]\r\n",
					"schema1=[\"id\",\"name\",\"skills\"]\r\n",
					"df=spark.createDataFrame(data=data1,schema=schema1)\r\n",
					"df.show()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df1=df.withColumn(\"explodecol\",explode(col('skills')))\r\n",
					"df1.show()"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data2=[(1,\"ron\",\"aws,python\"),\r\n",
					"        (2,\"don\",\"azure,java\"),\r\n",
					"        (3,\"son\",\"gcp,.net\")]\r\n",
					"schema2=[\"id\",\"name\",\"skills\"]\r\n",
					"df4=spark.createDataFrame(data=data2,schema=schema2)\r\n",
					"df4.show()"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df2=df4.withColumn(\"split\",split('skills',','))\r\n",
					"df2.show()"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data3=[(1,\"ron\",\"aws\",\"python\"),\r\n",
					"        (2,\"don\",\"azure\",\"java\"),\r\n",
					"        (3,\"son\",\"gcp\",\".net\")]\r\n",
					"schema3=[\"id\",\"name\",\"skill1\",\"skill2\"]\r\n",
					"df5=spark.createDataFrame(data=data3,schema=schema3)\r\n",
					"df5.show()"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df6=df5.withColumn(\"Skill\",array(col('skill1'),col('skill2')))\r\n",
					"df6.show()"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data7=[(1,\"ron\",[\"aws\",\"python\"]),\r\n",
					"        (2,\"don\",[\"azure\",\"java\"]),\r\n",
					"        (3,\"son\",[\"gcp\",\".net\"])]\r\n",
					"schema7=[\"id\",\"name\",\"skills\"]\r\n",
					"df7=spark.createDataFrame(data=data7,schema=schema7)\r\n",
					"df7.show()"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df8=df7.withColumn(\"Skilljava\",array_contains(col('skills'),'java'))\r\n",
					"df8.show()"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}